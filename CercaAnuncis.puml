@startuml
title Diagrama de seqüpència del Cas d'Ús · Cercar anuncis amb filtres

actor Usuari

box "Vista (Frontend)"
  boundary "Vista anuncis" as Vista
  control "Filters UI" as FiltersUI
end box

box "Controlador (Backend)"
  control "Router anuncis" as Router
  control "AnunciController" as Controller
  control "Filtres middleware" as Filtres
end box

box "Model"
  entity "AnunciModel" as Model
  database "Base de Dades" as DB
end box

entity "Mapbox API" as Mapbox

note over Usuari,Vista
Precondició: filtres (raça, preu, ubicació…) vàlids.
Sense ubicació → no es calcula distància.
end note

Usuari -> Vista : Selecciona filtres
activate Vista
Vista -> FiltersUI : Envia formulari
activate FiltersUI

alt Ubicació proporcionada
  FiltersUI -> Mapbox : geocode(municipi | província)
  Mapbox --> FiltersUI : lat/lon
  FiltersUI -> FiltersUI : Afegeix coordenades i radi
else Sense ubicació
  FiltersUI -> FiltersUI : Manté filtres sense distància
end

FiltersUI -> FiltersUI : buildParams()
FiltersUI -> Router : GET /anuncis?filtres
deactivate FiltersUI
deactivate Vista

activate Router
Router -> Controller : llistar(query)
activate Controller
Controller -> Filtres : prepararConsulta(query)
activate Filtres
Filtres -> Model : buildListQuery(query)
activate Model
Model -> DB : SELECT anuncis filtrats
activate DB
DB --> Model : files d'anuncis
deactivate DB
Model --> Filtres : resultats + metadades
deactivate Model

Filtres -> Controller : llista ordenada
deactivate Filtres
Controller --> Router : HTTP 200 + JSON anuncis
deactivate Controller
Router --> Vista : Resposta JSON
deactivate Router

activate Vista
Vista -> FiltersUI : Renderitza targetes
FiltersUI --> Usuari : Mostra resultat paginat
deactivate Vista

note over Vista,Usuari
Resultat: anuncis validats ordenats per destacat i distància (si disponible).
end note
@enduml